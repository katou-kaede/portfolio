<div class="container-fluid bg-body-tertiary min-vh-100">
  <div class="row mx-4">
    <h2 class="col-12 my-4">グループ作成</h2>

    <%= form_for @group, data: { turbo: false } do |f| %>
      <%= render "shared/error_messages", object: @group %>
      <div class="field mb-3">
        <%= f.label :name, "グループ名" %>
        <%= f.text_field :name, class: 'form-control' %>
      </div>

      <div class="field mb-3">
        <label for="members-select">メンバーを追加</label>
        <%# f.fields_for :group_members do |member_fields| %>
          <%# member_fields.select :user_id, @friends.map { |friend| [friend.profile.name, friend.id] }, { include_blank: '選択してください' }, { multiple: true, class: 'form-control' } %>
        <%# end %>
        <%= select_tag "group[member_ids][]", options_for_select(@friends.map { |friend| [friend.profile.name, friend.id, { 'data-avatar' => asset_path(friend.profile.avatar) }] }),
              class: "form-select", multiple: true, id: "members-select" %>
        <button type="button" id="add-member" class="btn btn-secondary mt-2">追加</button>
      </div>

      <div id="selected-members" class="mb-3 d-flex">
        <!-- 選択されたメンバーがここに表示される -->
      </div>

      <div class="field mb-3">
        <%= f.submit "作成", class: 'btn btn-primary' %>
      </div>
    <% end %>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const selectBox = document.getElementById("members-select");
    const addButton = document.getElementById("add-member");
    const selectedMembersContainer = document.getElementById("selected-members");

    addButton.addEventListener("click", () => {
      const selectedOptions = Array.from(selectBox.selectedOptions);

      selectedOptions.forEach(option => {
        const memberId = option.value;
        const memberName = option.text;
        const memberAvatar = option.getAttribute("data-avatar");

        // 重複して追加されないように確認
        if (!selectedMembersContainer.querySelector(`[data-member-id="${memberId}"]`)) {
          const memberItem = document.createElement("div");
          memberItem.dataset.memberId = memberId;
          memberItem.classList.add("selected-member");
          memberItem.innerHTML = `
            <div class="d-flex flex-column justify-content-center align-items-center mx-2">
              <img src="${memberAvatar}" alt="${memberName}'s avatar" style="width: 40px; height: 40px;">
              <div class="d-flex">
                <p>${memberName}</p>
                <a href="#"  class="remove-member text-decoration-none mx-1">
                  <i class="bi bi-x-circle-fill"></i>
                </a>
              </div>
            </div>
          `;

          selectedMembersContainer.appendChild(memberItem);

          memberItem.querySelector(".remove-member").addEventListener("click", () => {
            memberItem.remove();
          });
        }
      });

      // 選択をクリア
      selectBox.selectedIndex = -1;
    });
  });

  // フォーム送信前に選択されたメンバーを追加
  document.querySelector("form").addEventListener("submit", (event) => {
    const selectedMembers = Array.from(document.querySelectorAll("#selected-members .selected-member"));
    const memberIds = selectedMembers.map(member => member.dataset.memberId);

    // 隠しフィールドに選択されたメンバーのIDをセット
    selectedMembers.forEach(member => {
      const memberIdsInput = document.createElement("input");
      memberIdsInput.setAttribute("type", "hidden");
      memberIdsInput.setAttribute("name", "group[member_ids][]");
      memberIdsInput.value = member.dataset.memberId;

      document.querySelector("form").appendChild(memberIdsInput);
    });
  });
</script>